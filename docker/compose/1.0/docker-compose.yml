services:
  user_service:
    image: ${OS:-openpanel/ubuntu}
    container_name: ${USERNAME}
    hostname: ${HOSTNAME}
    restart: unless-stopped
    ports:
      - "${SSH_PORT}"
      - "${TTYD_PORT}"
    deploy:
      resources:
        limits:
          cpus: "${OS_CPU:-0.5}"
          memory: "${OS_RAM:-0.5G}"
    volumes:
      - /etc/openpanel/skeleton/motd:/etc/motd:ro         # SSH welcome message
      - /home/${CONTEXT}/mail/:/var/mail/                 # Mail storage
      - webserver_data:/etc/${path}/                      # Nginx/Apache data
      - pg_data:/var/lib/postgresql/data                  # Postgres data
      - mysql_data:/var/lib/mysql                         # MySQL data      
      - html_data:/var/www/html/                          # Website files
      - /home/${CONTEXT}/sockets/:/var/run/              # Sockets
    networks:
      - default
    command: [ "tail", "-f", "/dev/null" ]

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    user: "${UID:-0}"
    ports:
      - "${HTTP_PORT}"
      - "${HTTPS_PORT}"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - webserver_data:/etc/${path}/sites-enabled/
      - html_data:/var/www/html/                          # Website files     
    deploy:
      resources:
        limits:
          cpus: "${NGINX_CPU:-0.5}"
          memory: "${NGINX_RAM:-0.5G}"   
    networks:
      - default

  mysql:
    image: mysql:${MYSQL_VERSION:-latest}
    container_name: mysql
    restart: always
    user: "${UID:-0}"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}       
    ports:
      - "${MYSQL_PORT}"
    volumes:
      - mysql_data:/var/lib/mysql                         # MySQL data
      - /home/${CONTEXT}/sockets/mysqld:/var/run/mysqld   # MySQL socket
    deploy:
      resources:
        limits:
          cpus: "${MYSQL_CPU:-0.5}"
          memory: "${MYSQL_RAM:-0.5G}"  
    networks:
      - default    
    healthcheck:
      test: ['CMD-SHELL', 'mysqladmin ping -h localhost']
      interval: 1s
      timeout: 5s
      retries: 10

  phpmyadmin:
    container_name: phpmyadmin 
    depends_on:
      - mysql
    image: phpmyadmin #:5.2.2-fpm-alpine
    restart: always
    user: "${UID:-0}"
    ports:
      - "${PMA_PORT}"
    deploy:
      resources:
        limits:
          cpus: "${PMA_CPU:-0.1}"
          memory: "${PMA_RAM:-0.1G}"                
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
    networks:
      - default

  postgres:
    image: postgres:${POSTGRES_VERSION:-17.4-alpine3.21}
    container_name: postgres 
    restart: always
    user: "${UID:-0}"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme} 
    volumes:
      - pg_data:/var/lib/postgresql/data                             # Postgres data
      - /home/${CONTEXT}/sockets/postgresql:/var/run/postgresql     # Postgres socket
    deploy:
      resources:
        limits:
          cpus: "${POSTGRES_CPU:-0.5}"
          memory: "${POSTGRES_RAM:-0.5G}" 
    networks:
      - default
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 1s
      timeout: 5s
      retries: 10

  redis:
    image: redis:${REDIS_VERSION:-7.4.2-alpine}
    container_name: redis
    restart: unless-stopped
    user: "${UID:-0}"
    volumes:
      - /home/${CONTEXT}/sockets/redis:/var/run/redis  # Redis socket
    deploy:
      resources:
        limits:
          cpus: "${REDIS_CPU:-0.1}"
          memory: "${REDIS_RAM-0.1G}" 
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 5s
    networks:
      - default

  memcached:
    image: memcached:${MEMCACHED_VERSION:-7.4.2-alpine}
    container_name: memcached
    restart: unless-stopped
    user: "${UID:-0}"
    volumes:
      - /home/${CONTEXT}/sockets/memcached:/var/run/memcached  # Memcached socket
    deploy:
      resources:
        limits:
          cpus: "${MEMCACHED_CPU:-0.1}"
          memory: "${MEMCACHED_RAM-0.1G}" 
    command: [ "memcached", "-u", "root" ]
    healthcheck:    
      test: ["CMD", "memcached", "-h"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 5s
    networks:
      - default

networks:
  default:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  html_data:
    driver: local
  webserver_data:
    driver: local
  pg_data:
    driver: local
